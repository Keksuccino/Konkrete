
plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

base {
	archivesName = project.mod_id
}

version = "1.0.0"
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("runClient")
            ideConfigGenerated(true)
            runDir("run_client")
        }
        server {
            server()
            setConfigName("runServer")
            ideConfigGenerated(true)
            runDir("run_server")
        }
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
//	modImplementation "curse.maven:load-my-resources-fabric-534835:4583334"
    modImplementation "maven.modrinth:modmenu:9.0.0"
}

processResources {
	inputs.property "version", project.version
	
	filesMatching(['pack.mcmeta', 'fabric.mod.json', 'mods.toml', '*.mixins.json']) {
        expand project.properties
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	manifest {
	    attributes([
            'Specification-Title'     : mod_name,
            'Specification-Vendor'    : mod_author,
            'Specification-Version'   : mod_version,
            'Implementation-Title'    : project.name,
            'Implementation-Version'  : mod_version,
            'Implementation-Vendor'   : mod_author,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Timestamp'               : System.currentTimeMillis(),
            'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
            'Built-On-Minecraft'      : minecraft_version
        ])
    }
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}